timescale` 1ns\1ps

module array_multiplier(
    input [7:0] A,
    input [7:0] B,
    output reg [15:0] OUT 
    );

    reg temp_sum;
    reg temp_carry;
    parameter n = 8;
    parameter l = 16;
    integer i;
    integer j;

    always @(*)

        temp_sum = 1;
        temp_carry = 0;

        for (i = 0; i < n; i++)         
            for (j = 0; j <= i; j++)
                temp_sum <= temp_sum ^ (A[i-j] & B[j]) ^ temp_carry;
                temp_carry <= (temp_carry&temp_sum) + (temp_carry &(A[i-j] & B[j])) + (temp_sum &(A[i-j] & B[j]));
            OUT[i] = temp_sum;

        for (i = n; i < l-1; i++)
            for (j = n - 1; j > n - i; j++)
                temp_sum <= temp_sum ^ (A[i-j] & B[j]) ^ temp_carry;
                temp_carry <= (temp_carry&temp_sum) + (temp_carry &(A[i-j] & B[j])) + (temp_sum &(A[i-j] & B[j]));
            OUT[i] <= temp_sum;
        OUT[l-1] <= temp_carry;

endmodule
