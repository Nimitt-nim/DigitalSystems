module SmartMathTutor{
    input [9:2]S;
    input[4:0]R;
    output [31:0]OUT;
}
always @(*)
    begin
    // Range
    Rd[31] = (R[0] & R[1] & R[2] & R[3] & R[4]);
    Rd[30] = (R[1] & R[2] & R[3] & R[4]);
    Rd[29] = (R[4]& R[3]& R[2]& R[0]& | R[4]& R[3]& R[2]& R[1]);
    Rd[28] = (R[4]& R[3]& R[2]);
    Rd[27] = (R[4]& R[3]& R[1]& R[0]& | R[4]& R[3]& R[2] );
    Rd[26] = (R[4]& R[3]& R[1]&  | R[4]& R[3]& R[2] );
    Rd[25] = (R[4]& R[3]& R[0]& | R[4]& R[3]& R[1]&  | R[4]& R[3]& R[2] );
    Rd[24] = (R[4]& R[3] );
    Rd[23] = (R[4]& R[2]& R[1]& R[0]& | R[4]& R[3] );
    Rd[22] = (R[4]& R[2]& R[1]&  | R[4]& R[3] );
    Rd[21] = (R[4]& R[2]& R[0]& | R[4]& R[2]& R[1]&  | R[4]& R[3] );
    Rd[20] = (R[4]& (R[2]&  | R[3] ));
    Rd[19] = (R[4]& R[1]& R[0]& | R[4]& R[2]&  | R[4]& R[3] );
    Rd[18] = ( R[4]& R[1]&  | R[4]& R[2]&  | R[4]& R[3] );
    Rd[17] = (R[4]& R[0]& | R[4]& R[1]&  | R[4]& R[2]&  | R[4]& R[3] );
    Rd[16] = (R[4] );
    Rd[15] = (R[3]& R[2]& R[1]& R[0]& | R[4] );
    Rd[14] = (R[3]& R[2]& R[1]&  | R[4] );
    Rd[13] = (R[3]& R[2]& R[0]& | R[3]& R[2]& R[1]&  | R[4] );
    Rd[12] = ( R[3]& R[2]&  | R[4] );
    Rd[11] = (R[3]& R[1]& R[0]& | R[3]& R[2]&  | R[4] );
    Rd[10] = ( R[3]& R[1]&  | R[3]& R[2]&  | R[4] );
    Rd[9]  = (R[3]& R[0]& | R[3]& R[1]&  | R[3]& R[2]&  | R[4] );
    Rd[8]  = ( R[3]&  | R[4] );
    Rd[7]  = ( R[2]& R[1]& R[0]& | R[3]&  | R[4] );
    Rd[6]  = (R[2]& R[1]&  | R[3]&  | R[4] );
    Rd[5]  = ( R[2]& R[0]& | R[2]& R[1]&  | R[3]&  | R[4] );
    Rd[4]  = ( R[2]&  | R[3]&  | R[4] );
    Rd[3]  = (R[1]& R[0]& | R[2]&  | R[3]&  | R[4] );
    Rd[2]  = (R[1]&  | R[2]&  | R[3]&  | R[4] );
    Rd[1]  = (R[0]& | R[1]&  | R[2]&  | R[3]&  | R[4] );
    Rd[0]  = (1);



    // creating the final out put array
    OUT[0] =   1;
    OUT[1] =   0;
    OUT[2] =   S[2] &  Rd[2];
    OUT[3] =   S[3] &  Rd[3];
    OUT[4] =   S[2] | S[4] &  Rd[4];
    OUT[5] =   S[5] &  Rd[5];
    OUT[6] =   S[2] | S[3] &  Rd[6];
    OUT[7] =   S[7] &  Rd[7];
    OUT[8] =   S[2] | S[4] | S[8] &  Rd[8];
    OUT[9] =   S[3] | S[9] &  Rd[9];
    OUT[10] =  S[2] | S[5] &  Rd[10];
    OUT[11] =  0;
    OUT[12] =  S[2] | S[3] | S[4] | S[6]  &  Rd[12];
    OUT[13] =  0;
    OUT[14] =  S[2] | S[7] &  Rd[14];
    OUT[15] =  S[3] | S[5] &  Rd[15];
    OUT[16] =  S[2] | S[4] | S[8] &  Rd[16];
    OUT[17] =  0;
    OUT[18] =  S[2] | S[3] | S[6] | S[9] &  Rd[18];
    OUT[19] =  0;
    OUT[20] =  S[2] | S[4] | S[5] &  Rd[20];
    OUT[21] =  S[3] | S[7] | S[5] &  Rd[21];
    OUT[22] =  S[2] &  Rd[22];
    OUT[23] =  0;
    OUT[24] =  S[3] | S[7] | S[5] &  Rd[24];
    OUT[25] =  S[5] &  Rd[25];
    OUT[26] =  0;
    OUT[27] =  S[3] | S[9] &  Rd[27];
    OUT[28] =  S[2] | S[4] | S[7] &  Rd[28];
    OUT[29] =  0;
    OUT[30] =  S[2] | |S[3] | S[5] &  Rd[30];
    OUT[31] =  0;
    end
endmodule