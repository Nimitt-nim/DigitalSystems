module SmartMathTutor(
    input[4:0]R;
    input[7:0]S;
    output [31:0]OUT2;
);

always @(*)
    // Decoder
    OUT[0] = (~A[0] & ~A[1] & ~A[2] & ~A[3] & ~A[4]);
    OUT[1] = (A[0] & ~A[1] & ~A[2] & ~A[3] & ~A[4]);
    OUT[2] = (~A[0] & A[1] & ~A[2] & ~A[3] & ~A[4]);
    OUT[3] = (A[0] & A[1] & ~A[2] & ~A[3] & ~A[4]);
    OUT[4] = (~A[0] & ~A[1] & A[2] & ~A[3] & ~A[4]);
    OUT[5] = (A[0] & ~A[1] & A[2] & ~A[3] & ~A[4]);
    OUT[6] = (~A[0] & A[1] & A[2] & ~A[3] & ~A[4]);
    OUT[7] = (A[0] & A[1] & A[2] & ~A[3] & ~A[4]);
    OUT[8] = (~A[0] & ~A[1] & ~A[2] & A[3] & ~A[4]);
    OUT[9] = (A[0] & ~A[1] & ~A[2] & A[3] & ~A[4]);
    OUT[10] = (~A[0] & A[1] & ~A[2] & A[3] & ~A[4]);
    OUT[11] = (A[0] & A[1] & ~A[2] & A[3] & ~A[4]);
    OUT[12] = (~A[0] & ~A[1] & A[2] & A[3] & ~A[4]);
    OUT[13] = (A[0] & ~A[1] & A[2] & A[3] & ~A[4]);
    OUT[14] = (~A[0] & A[1] & A[2] & A[3] & ~A[4]);
    OUT[15] = (A[0] & A[1] & A[2] & A[3] & ~A[4]);
    OUT[16] = (~A[0] & ~A[1] & ~A[2] & ~A[3] & A[4]);
    OUT[17] = (A[0] & ~A[1] & ~A[2] & ~A[3] & A[4]);
    OUT[18] = (~A[0] & A[1] & ~A[2] & ~A[3] & A[4]);
    OUT[19] = (A[0] & A[1] & ~A[2] & ~A[3] & A[4]);
    OUT[20] = (~A[0] & ~A[1] & A[2] & ~A[3] & A[4]);
    OUT[21] = (A[0] & ~A[1] & A[2] & ~A[3] & A[4]);
    OUT[22] = (~A[0] & A[1] & A[2] & ~A[3] & A[4]);
    OUT[23] = (A[0] & A[1] & A[2] & ~A[3] & A[4]);
    OUT[24] = (~A[0] & ~A[1] & ~A[2] & A[3] & A[4]);
    OUT[25] = (A[0] & ~A[1] & ~A[2] & A[3] & A[4]);
    OUT[26] = (~A[0] & A[1] & ~A[2] & A[3] & A[4]);
    OUT[27] = (A[0] & A[1] & ~A[2] & A[3] & A[4]);
    OUT[28] = (~A[0] & ~A[1] & A[2] & A[3] & A[4]);
    OUT[29] = (A[0] & ~A[1] & A[2] & A[3] & A[4]);
    OUT[30] = (~A[0] & A[1] & A[2] & A[3] & A[4]);
    OUT[31] = (A[0] & A[1] & A[2] & A[3] & A[4]);

    // Range
    OUT3[31] = (~R[0] & ~R[1] & ~R[2] & ~R[3] & ~R[4]);
    OUT3[30] = (OUT3[31]|| OUT[30]);
    OUT3[29] = (OUT3[30] || OUT[29]);
    OUT3[28] = (OUT3[29] || OUT[28]);
    OUT3[27] = (OUT3[28]|| OUT[27]);
    OUT3[26] = (OUT3[27] || OUT[26]);
    OUT3[25] = (OUT3[26]|| OUT[25]);
    OUT3[24] = (OUT3[25] || OUT[24]);
    OUT3[23] = (OUT3[24]|| OUT[23]);
    OUT3[22] = (OUT3[23] || OUT[22]);
    OUT3[21] = (OUT3[22]|| OUT[21]);
    OUT3[20] = (OUT3[21] || OUT[20]);
    OUT3[19] = (OUT3[20]|| OUT[19]);
    OUT3[18] = (OUT3[19] || OUT[18]);
    OUT3[17] = (OUT3[18]|| OUT[17]);
    OUT3[16] = (OUT3[17] || OUT[16]);
    OUT3[15] = (OUT3[16]|| OUT[15]);
    OUT3[14] = (OUT3[15] || OUT[14]);
    OUT3[13] = (OUT3[14]|| OUT[13]);
    OUT3[12] = (OUT3[13] || OUT[12]);
    OUT3[11] = (OUT3[12]|| OUT[11]);
    OUT3[10] = (OUT3[11] || OUT[10]);
    OUT3[9] = (OUT3[10] || OUT[9]);
    OUT3[8] = (OUT3[9] || OUT[8]);
    OUT3[7] = (OUT3[8]|| OUT[7]);
    OUT3[6] = (OUT3[7] || OUT[6]);
    OUT3[5] = (OUT3[6]|| OUT[5]);
    OUT3[4] = (OUT3[5] || OUT[4]);
    OUT3[3] = (OUT3[4] || OUT[3]);
    OUT3[2] = (OUT3[3]|| OUT[2]);
    OUT3[1] = (OUT3[2] || OUT[1]);
    OUT3[0] = (OUT3[1] || OUT[0]);


    // creating the final out put array
    OUT2[0] = 1;
    OUT2[1] = OUT[1] &&  OUT3[1];
    OUT2[2] = OUT[1] || OUT[2] &&  OUT3[2];
    OUT2[3] = OUT[1] || OUT[3] &&  OUT3[3];
    OUT2[4] = OUT[1] || OUT[2] || OUT[4] &&  OUT3[4];
    OUT2[5] = OUT[1] || OUT[5] &&  OUT3[5];
    OUT2[6] = OUT[1] || OUT[2] || OUT[3] &&  OUT3[6];
    OUT2[7] = OUT[1] || OUT[7] &&  OUT3[7];
    OUT2[8] = OUT[1] || OUT[2] || OUT[4] || OUT[8] &&  OUT3[8];
    OUT2[9] = OUT[1] || OUT[3] || OUT[9] &&  OUT3[9];
    OUT2[10] = OUT[1] || OUT[2] || OUT[5] &&  OUT3[10];
    OUT2[11] = OUT[1] && OUT3[11];
    OUT2[12] = OUT[1] || OUT[2] || OUT[3] || OUT[4] || OUT[6]  &&  OUT3[12];
    OUT2[13] = OUT[1] &&  OUT3[13];
    OUT2[14] = OUT[1] || OUT[2] || OUT[7] &&  OUT3[14];
    OUT2[15] = OUT[1] || OUT[3] || OUT[5] &&  OUT3[15];
    OUT2[16] = OUT[1] || OUT[2] || OUT[4] || OUT[8] &&  OUT3[16];
    OUT2[17] = OUT[1]  &&  OUT3[17];
    OUT2[18] = OUT[1] || OUT[2] || OUT[3] || OUT[6] || OUT[9] &&  OUT3[18];
    OUT2[19] = OUT[1] &&  OUT3[19];
    OUT2[20] = OUT[1] || OUT[2] || OUT[4] || OUT[5] &&  OUT3[20];
    OUT2[21] = OUT[1] || OUT[3] || OUT[7] || OUT[5] &&  OUT3[21];
    OUT2[22] = OUT[1] || OUT[2] &&  OUT3[22];
    OUT2[23] = OUT[1] || OUT[23] &&  OUT3[23];
    OUT2[24] = OUT[1] || OUT[3] || OUT[7] || OUT[5] || OUT[21]&&  OUT3[24];
    OUT2[25] = OUT[1] || OUT[5] || OUT[25]&&  OUT3[25];
    OUT2[26] = OUT[1] || OUT[13] || OUT[26]&&  OUT3[26];
    OUT2[27] = OUT[1] || OUT[3] || OUT[9] || OUT[27]&&  OUT3[27];
    OUT2[28] = OUT[1] || OUT[2] || OUT[4] || OUT[7] || OUT[28] || OUT[14] &&  OUT3[28];
    OUT2[29] = OUT[1] || OUT[29] &&  OUT3[29];
    OUT2[30] = OUT[1] || OUT[2] || ||OUT[3] || OUT[5] || OUT[15] || OUT[30]&&  OUT3[30];
    OUT2[31] = OUT[1] || OUT[31] &&  OUT3[31];
endmodule




module SmartMathTutor{
    input [9:2]S;
    input[4:0]R;
    output [31:0]OUT3;
}
always @(*)

    // Decoder
    OUT[0] = (~A[0] & ~A[1] & ~A[2] & ~A[3] & ~A[4]);
    OUT[1] = (A[0] & ~A[1] & ~A[2] & ~A[3] & ~A[4]);
    OUT[2] = (~A[0] & A[1] & ~A[2] & ~A[3] & ~A[4]);
    OUT[3] = (A[0] & A[1] & ~A[2] & ~A[3] & ~A[4]);
    OUT[4] = (~A[0] & ~A[1] & A[2] & ~A[3] & ~A[4]);
    OUT[5] = (A[0] & ~A[1] & A[2] & ~A[3] & ~A[4]);
    OUT[6] = (~A[0] & A[1] & A[2] & ~A[3] & ~A[4]);
    OUT[7] = (A[0] & A[1] & A[2] & ~A[3] & ~A[4]);
    OUT[8] = (~A[0] & ~A[1] & ~A[2] & A[3] & ~A[4]);
    OUT[9] = (A[0] & ~A[1] & ~A[2] & A[3] & ~A[4]);
    OUT[10] = (~A[0] & A[1] & ~A[2] & A[3] & ~A[4]);
    OUT[11] = (A[0] & A[1] & ~A[2] & A[3] & ~A[4]);
    OUT[12] = (~A[0] & ~A[1] & A[2] & A[3] & ~A[4]);
    OUT[13] = (A[0] & ~A[1] & A[2] & A[3] & ~A[4]);
    OUT[14] = (~A[0] & A[1] & A[2] & A[3] & ~A[4]);
    OUT[15] = (A[0] & A[1] & A[2] & A[3] & ~A[4]);
    OUT[16] = (~A[0] & ~A[1] & ~A[2] & ~A[3] & A[4]);
    OUT[17] = (A[0] & ~A[1] & ~A[2] & ~A[3] & A[4]);
    OUT[18] = (~A[0] & A[1] & ~A[2] & ~A[3] & A[4]);
    OUT[19] = (A[0] & A[1] & ~A[2] & ~A[3] & A[4]);
    OUT[20] = (~A[0] & ~A[1] & A[2] & ~A[3] & A[4]);
    OUT[21] = (A[0] & ~A[1] & A[2] & ~A[3] & A[4]);
    OUT[22] = (~A[0] & A[1] & A[2] & ~A[3] & A[4]);
    OUT[23] = (A[0] & A[1] & A[2] & ~A[3] & A[4]);
    OUT[24] = (~A[0] & ~A[1] & ~A[2] & A[3] & A[4]);
    OUT[25] = (A[0] & ~A[1] & ~A[2] & A[3] & A[4]);
    OUT[26] = (~A[0] & A[1] & ~A[2] & A[3] & A[4]);
    OUT[27] = (A[0] & A[1] & ~A[2] & A[3] & A[4]);
    OUT[28] = (~A[0] & ~A[1] & A[2] & A[3] & A[4]);
    OUT[29] = (A[0] & ~A[1] & A[2] & A[3] & A[4]);
    OUT[30] = (~A[0] & A[1] & A[2] & A[3] & A[4]);
    OUT[31] = (A[0] & A[1] & A[2] & A[3] & A[4]);

    // Range
    OUT3[31] = (R[0] & R[1] & R[2] & R[3] & R[4]);
    OUT3[30] = (OUT3[31]|| OUT[30] );
    OUT3[29] = (OUT3[30] || OUT[29]);
    OUT3[28] = (OUT3[29] || OUT[28]);
    OUT3[27] = (OUT3[28]|| OUT[27]);
    OUT3[26] = (OUT3[27] || OUT[26]);
    OUT3[25] = (OUT3[26]|| OUT[25]);
    OUT3[24] = (OUT3[25] || OUT[24]);
    OUT3[23] = (OUT3[24]|| OUT[23]);
    OUT3[22] = (OUT3[23] || OUT[22]);
    OUT3[21] = (OUT3[22]|| OUT[21]);
    OUT3[20] = (OUT3[21] || OUT[20]);
    OUT3[19] = (OUT3[20]|| OUT[19]);
    OUT3[18] = (OUT3[19] || OUT[18]);
    OUT3[17] = (OUT3[18]|| OUT[17]);
    OUT3[16] = (OUT3[17] || OUT[16]);
    OUT3[15] = (OUT3[16]|| OUT[15]);
    OUT3[14] = (OUT3[15] || OUT[14]);
    OUT3[13] = (OUT3[14]|| OUT[13]);
    OUT3[12] = (OUT3[13] || OUT[12]);
    OUT3[11] = (OUT3[12]|| OUT[11]);
    OUT3[10] = (OUT3[11] || OUT[10]);
    OUT3[9] = (OUT3[10] || OUT[9]);
    OUT3[8] = (OUT3[9] || OUT[8]);
    OUT3[7] = (OUT3[8]|| OUT[7]);
    OUT3[6] = (OUT3[7] || OUT[6]);
    OUT3[5] = (OUT3[6]|| OUT[5]);
    OUT3[4] = (OUT3[5] || OUT[4]);
    OUT3[3] = (OUT3[4] || OUT[3]);
    OUT3[2] = (OUT3[3]|| OUT[2]);
    OUT3[1] = (OUT3[2] || OUT[1]);
    OUT3[0] = (OUT3[1] || OUT[0]);


    // creating the final out put array
    OUT2[0] = 1;
    OUT2[1] = (~a & ~b & ~c & ~d & ~e) &&  OUT3[1];
    OUT2[2] = (~a & ~b & ~c & ~d & ~e) || (~a~b~c~de + ~a~b~cd~e) &&  OUT3[1];
    OUT2[3] = (~a & ~b & ~c & ~d & ~e) || (~a & ~b & ~c & d & e) &&  OUT3[1];
    OUT2[4] = (~a~b~c~de + ~a~b~cd~e + ~a~bc~d~e) &&  OUT3[1];
    OUT2[5] = (~a~b~de) &&  OUT3[1];
    OUT2[6] = (~a~b~ce + ~a~b~cd) &&  OUT3[1];
    OUT2[7] = ( ~a~b~c~de + ~a~bcde) &&  OUT3[1];
    OUT2[8] = (~a~b~c~de + ~a~b~cd~e + ~a~bc~d~e + ~ab~c~d~e) &&  OUT3[1];
    OUT2[9] = (~a~b~ce + ~a~c~de) &&  OUT3[1];
    OUT2[10] = (~a~b~de) &&  OUT3[1];
    OUT2[11] = (~a & ~b & ~c & ~d & ~e) && OUT3[1];
    OUT2[12] = (~a~b~ce + ~ac~d~e + ~a~bd~e) &&  OUT3[1];
    OUT2[13] = (~a & ~b & ~c & ~d & ~e) &&  OUT3[1];
    OUT2[14] = (~a~b~c~de + ~a~b~cd~e + ~a~bcde + ~abcd~e) &&  OUT3[1];
    OUT2[15] = (~abcde + ~a~b~ce + ~a~b~de) &&  OUT3[1];
    OUT2[16] = ( ~a~b~c~de + ~a~b~cd~e + ~a~bc~d~e + ~ab~c~d~e + a~b~c~d~e) &&  OUT3[1];
    OUT2[17] = (~b~c~de) &&  OUT3[1];
    OUT2[18] = (~a~b~ce + ~a~c~de) &&  OUT3[1];
    OUT2[19] = (~a & ~b & ~c & ~d & ~e) &&  OUT3[1];
    OUT2[20] = (~a~b~de) &&  OUT3[1];
    OUT2[21] = ( ~a~b~c~de + ~a~bcde) &&  OUT3[1];
    OUT2[22] = (~a & ~b & ~c & d & ~e) &&  OUT3[1];
    OUT2[23] = (~a & ~b & ~c & ~d & ~e) &&  OUT3[1];
    OUT2[24] = (~a~b~ce + ~ac~d~e + ~a~bd~e) &&  OUT3[1];
    OUT2[25] = (~a~b~de) &&  OUT3[1];
    OUT2[26] = (~a & ~b & ~c & ~d & ~e) &&  OUT3[1];
    OUT2[27] = (~a~b~ce + ~a~c~de) &&  OUT3[1];
    OUT2[28] = (~a~b~c~de + ~a~b~cd~e + ~a~bcde + ~abcd~e) &&  OUT3[1];
    OUT2[29] =(~a & ~b & ~c & ~d & ~e) &&  OUT3[1];
    OUT2[30] = (~abcde + ~a~b~ce + ~a~b~de) &&  OUT3[1];
    OUT2[31] = (~abcde + ~a~b~ce + ~a~b~de) &&  OUT3[1];

endmodule


    OUT3[31] = (R[0] & R[1] & R[2] & R[3] & R[4]);
    OUT3[30] = (OUT3[31]|| (~R[0] & R[1] & R[2] & R[3] & R[4]) );
    OUT3[29] = (OUT3[30] || (R[0] & ~R[1] & R[2] & R[3] & R[4]));
    OUT3[28] = (OUT3[29] || (~R[0] & ~R[1] & R[2] & R[3] & R[4]));
    OUT3[27] = (OUT3[28]|| (R[0] & R[1] & ~R[2] & R[3] & R[4]));
    OUT3[26] = (OUT3[27] || (~R[0] & R[1] & ~R[2] & R[3] & R[4]));
    OUT3[25] = (OUT3[26]|| (R[0] & ~R[1] & ~R[2] & R[3] & R[4]));
    OUT3[24] = (OUT3[25] || (~R[0] & ~R[1] & ~R[2] & R[3] & R[4]));
    OUT3[23] = (OUT3[24]|| (R[0] & R[1] & R[2] & ~R[3] & R[4]));
    OUT3[22] = (OUT3[23] ||(~R[0] & R[1] & R[2] & ~R[3] & R[4]));
    OUT3[21] = (OUT3[22]|| (R[0] & ~R[1] & R[2] & ~R[3] & R[4]));
    OUT3[20] = (OUT3[21] || (~R[0] & ~R[1] & R[2] & ~R[3] & R[4]));
    OUT3[19] = (OUT3[20]|| (R[0] & R[1] & ~R[2] & ~R[3] & R[4]));
    OUT3[18] = (OUT3[19] || (~R[0] & R[1] & ~R[2] & ~R[3] & R[4]));
    OUT3[17] = (OUT3[18]|| (R[0] & ~R[1] & ~R[2] & ~R[3] & R[4]));
    OUT3[16] = (OUT3[17] || (~R[0] & ~R[1] & ~R[2] & ~R[3] & R[4]));
    OUT3[15] = (OUT3[16]|| (R[0] & R[1] & R[2] & R[3] & ~R[4]));
    OUT3[14] = (OUT3[15] || (~R[0] & R[1] & R[2] & R[3] & ~R[4]));
    OUT3[13] = (OUT3[14]|| (R[0] & ~R[1] & R[2] & R[3] & ~R[4]));
    OUT3[12] = (OUT3[13] || (~R[0] & ~R[1] & R[2] & R[3] & ~R[4]));
    OUT3[11] = (OUT3[12]|| (R[0] & R[1] & ~R[2] & R[3] & ~R[4]));
    OUT3[10] = (OUT3[11] || (~R[0] & R[1] & ~R[2] & R[3] & ~R[4]));
    OUT3[9] = (OUT3[10] || (R[0] & ~R[1] & ~R[2] & R[3] & ~R[4]));
    OUT3[8] = (OUT3[9] || (~R[0] & ~R[1] & ~R[2] & R[3] & ~R[4]));
    OUT3[7] = (OUT3[8]|| (R[0] & R[1] & R[2] & ~R[3] & ~R[4]));
    OUT3[6] = (OUT3[7] || (~R[0] & R[1] & R[2] & ~R[3] & ~R[4]));
    OUT3[5] = (OUT3[6]|| (R[0] & ~R[1] & R[2] & ~R[3] & ~R[4]));
    OUT3[4] = (OUT3[5] || (~R[0] & ~R[1] & R[2] & ~R[3] & ~R[4]));
    OUT3[3] = (OUT3[4] || (R[0] & R[1] & ~R[2] & ~R[3] & ~R[4]));
    OUT3[2] = (OUT3[3]|| (~R[0] & R[1] & ~R[2] & ~R[3] & ~R[4]));
    OUT3[1] = (OUT3[2] || (R[0] & ~R[1] & ~R[2] & ~R[3] & ~R[4]));
    OUT3[0] = (OUT3[1] || (~R[0] & ~R[1] & ~R[2] & ~R[3] & ~R[4]));

        OUT3[31] = (R[0] & R[1] & R[2] & R[3] & R[4]);
    OUT3[30] = (R[1] & R[2] & R[3] & R[4]);
    OUT3[29] = (abce | abcd);
    OUT3[28] = (abc);
    OUT3[27] = (abde | abc);
    OUT3[26] = (abd | abc);
    OUT3[25] = (abe | abd | abc);
    OUT3[24] = (ab);
    OUT3[23] = (acde | ab);
    OUT3[22] = (acd | ab);
    OUT3[21] = (ace | acd | ab);
    OUT3[20] = (a(c | b));
    OUT3[19] = (ade | ac | ab);
    OUT3[18] = ( ad | ac | ab);
    OUT3[17] = (ae | ad | ac | ab);
    OUT3[16] = (a);
    OUT3[15] = (bcde | a);
    OUT3[14] = (bcd | a);
    OUT3[13] = (bce | bcd | a);
    OUT3[12] = ( bc | a);
    OUT3[11] = (bde | bc | a);
    OUT3[10] = ( bd | bc | a);
    OUT3[9]  = (be | bd | bc | a);
    OUT3[8]  = ( b | a);
    OUT3[7]  = ( cde | b | a);
    OUT3[6]  = (cd | b | a);
    OUT3[5]  = ( ce | cd | b | a);
    OUT3[4]  = ( c | b | a);
    OUT3[3]  = (de | c | b | a);
    OUT3[2]  = (d | c | b | a);
    OUT3[1]  = (e | d | c | b | a);
    OUT3[0]  = (1); 



        Rd[2] = (~e);
        Rd[3] = ( ~a~b~c~d~e + ~a~b~cde + ~a~bcd~e + ~ab~c~de + ~abc~d~e + ~abcde + a~b~cd~e + a~bc~de + ab~c~d~e + ab~cde + abcd~e);
        Rd[4] = (~d~e);
        Rd[5] = (~a~b~c~d~e + ~a~bc~de + ~ab~cd~e + ~abcde + a~bc~d~e + ab~c~de + abcd~e);
        Rd[6] = (~a~b~c~d~e + ~a~bcd~e + ~abc~d~e + a~b~cd~e + ab~c~d~e + abcd~e);
        Rd[7] = (~a~b~c~d~e + ~a~bcde + ~abcd~e + a~bc~de + abc~d~e);
        Rd[8] = (~c~d~e);
        Rd[9] = ( ~a~b~c~d~e + ~ab~c~de + a~b~cd~e + ab~cde);