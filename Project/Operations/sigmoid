module sigmoid(
    input [31:0]x,
    output reg [31:0] y
);
    // Constants
    reg [31:0] zero;
    zero = 32'b00000000000000000000000000000000;
    
    reg [31:0] one;
    zero = 32'b00111111100000000000000000000000;
    
    reg [31:0] minus_five;
    minus_five = 32'b11000000101000000000000000000000;
    
    reg [31:0] minus_two;
    minus_two = 32'b11000000000000000000000000000000;
    
    reg [31:0] two;
    two = 32'b01000000000000000000000000000000
    
    reg [31:0] five;
    five = 32'b01000000101000000000000000000000;
    
    reg [31:0] zero_point_0375;
    zero_point_0375 = 32'b00111101000110011001100110011010;
    
    reg [31:0] zero_point_5;
    zero_point_5 = 32'b00111111000000000000000000000000;
    
    reg [31:0] zero_point_805;
    zero_point_805 = 32'b00111111010011100001010001111011;
    
    reg [31:0] zero_point_190;
    zero_point_805 = 32'b00111110010000101000111101011100;
    
    reg [1:0] c1, c2, c3, c4;
    
    comparator co1(.num1(x),.num2(minus_five), .result(c1));
    comparator co2(.num1(x),.num2(minus_two), .result(c2));
    comparator co3(.num1(x),.num2(two), .result(c3));
    comparator co4(.num1(x),.num2(five), .result(c4));
    
    reg [31:0] o1;
		reg [31:0] o2;
		reg [31:0] o3;
		
		reg [31:0] u1;
		reg [31:0] u2;
		reg [31:0] u3;
    
    reg e,o,u;
    multiplier m1(.x(x), .(zero_point_0375), .Exception(e),.Overflow(o),.Underflow(u), .result(o1));
    multiplier m1(.x(x), .(zero_point_190), .Exception(e),.Overflow(o),.Underflow(u), .result(o2));
    multiplier m1(.x(x), .(zero_point_0375), .Exception(e),.Overflow(o),.Underflow(u), .result(o3));

    adder_subtrator a1(.a_operand(o1), .b_operand(zero_point_190), .AddBar_Sub(0), .Exception(e), .result(u1));
    adder_subtrator a1(.a_operand(o2), .b_operand(zero_point_5), .AddBar_Sub(0), .Exception(e), .result(u2));
    adder_subtrator a1(.a_operand(o3), .b_operand(zero_point_805), .AddBar_Sub(0), .Exception(e), .result(u3));
    
    
    always @(x)
    begin
        if (c1)
            y = zero;
        else if (c2)
            y = u1;
        else if (c3)
            y = u2;
        else if (c4)
            y = u3;
        else 
            y = one;
    end
    
endmodule
